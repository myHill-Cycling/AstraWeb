name: Release
on:
  push:
    branches:
      - main
    paths-ignore:
      - "CHANGELOG.md"
      - "package.json"

jobs:
  build_website:
    uses: ./.github/workflows/build_artifact.yml
    secrets:
      RFG_API_KEY: ${{ secrets.RFG_API_KEY }}

  lighthouse:
    uses: ./.github/workflows/lighthouse_audit.yml
    needs: [build_website]
    secrets:
      LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
    with:
      WebsiteArtifactName: ${{ needs.build_website.outputs.WebsiteArtifactName }}

  cypress_test:
    permissions: write-all
    uses: ./.github/workflows/cypress_tests.yml
    needs: [build_website]
    with:
      WebsiteArtifactName: ${{ needs.build_website.outputs.WebsiteArtifactName }}
    secrets:
      CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}

  scan_links:
    uses: ./.github/workflows/link_scanner.yml
    needs: [build_website]
    with:
      WebsiteArtifactName: ${{ needs.build_website.outputs.WebsiteArtifactName }}

  release:
    name: "Package Website"
    runs-on: ubuntu-latest
    needs: [build_website, cypress_test, lighthouse]
    steps:
      - name: Get Token
        id: get_workflow_token
        uses: peter-murray/workflow-application-token-action@v1
        with:
          organization: "myHill-Cycling"
          permissions: "contents:write,checks:write,issues:write"
          application_id: ${{ secrets.APPLICATION_ID }}
          application_private_key: ${{ secrets.APPLICATION_PRIVATE_KEY }}

      - name: Checkout
        uses: actions/checkout@v3
        with:
          lfs: false
          token: ${{ steps.get_workflow_token.outputs.token }}

      - name: Pull Tags
        if: ${{ !env.ACT }}
        run: git fetch --prune --tags

      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ needs.build_website.outputs.WebsiteArtifactName }}
          # download all files into "dist" folder
          path: dist

      - name: Archive distribution
        run: "cd ./dist && zip -v -r ../static_site.zip . ; cd .."

      - name: Build Release
        if: ${{ !env.ACT }}
        run: yarn semantic-release
        env:
          GH_TOKEN: ${{ steps.get_workflow_token.outputs.token }}