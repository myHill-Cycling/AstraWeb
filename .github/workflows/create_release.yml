name: Release
on:
  workflow_dispatch:
    
  push:
    branches:
      - main
    paths:
      - "src/"
      - "assets/"
      - "public/"
      - "yarn.lock"
      - "astro.config.mjs"
      - "build-csp.mjs"
      - "tailwind.config.cjs"

jobs:

  build:
    uses: ./.github/workflows/build.yml
  
  release:
    name: 📦 Package Website
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: 🛡️ Get Token
        id: get_workflow_token
        uses: peter-murray/workflow-application-token-action@v1
        with:
          organization: "myHill-Cycling"
          permissions: "contents:write,checks:write,issues:write"
          application_id: ${{ secrets.APPLICATION_ID }}
          application_private_key: ${{ secrets.APPLICATION_PRIVATE_KEY }}

      - name: 📥 Checkout
        uses: actions/checkout@v3
        with:
          lfs: false
          token: ${{ steps.get_workflow_token.outputs.token }}

      - name: 📨 Pull Tags
        if: ${{ !env.ACT }}
        run: git fetch --prune --tags

      - run: yarn --version || npm install -g yarn
        name: 🔗 Install yarn

      - name: 🧱 Node Setup
        if: ${{ !env.ACT }}
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "yarn"

      - name: 🗄️ Dependency Module Cache
        uses: actions/cache@v3
        with:
          path: "**/node_modules"
          key: "${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}"

      - name: 🔗 Dependency installation
        run: yarn install
        env:
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: true

      - name: 📦 Download site artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ needs.build_website.outputs.website_artifact }}
          # download all files into "dist" folder
          path: dist

      - name: 📦 Download API artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ needs.build_website.outputs.api_artifact }}
          path: dist-api

      - name: 📫 Archive distribution
        run: "cd ./dist && zip -v -r ../static_site.zip . ; cd .."

      - name: 🏗️ Build Release
        if: ${{ !env.ACT }}
        run: yarn semantic-release
        env:
          GH_TOKEN: ${{ steps.get_workflow_token.outputs.token }}

      - name: 🚀 Deploy to Azure
        id: deploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
          action: "upload"
          ###### Repository/Build Configurations - These values can be configured to match your app requirements. ######
          # For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig
          app_location: "./dist" # App source code path
          api_location: "./dist-api" # Api source code path - optional
          output_location: "" # Built app content directory - optional
          skip_app_build: true
          skip_api_build: true
          skip_deploy_on_missing_secrets: true
          ###### End of Repository/Build Configurations ######
