name: Release
on:
  push:
    branches:
      - main
    paths:
      - "src/"
      - "assets/"
      - "cypress/"
      - "public/"
      - "yarn.lock"

jobs:

  build_website:
    uses: ./.github/workflows/build_artifact.yml

  lighthouse:
    uses: ./.github/workflows/lighthouse_audit.yml
    needs: [build_website]
    secrets:
      LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
    with:
      WebsiteArtifactName: ${{ needs.build_website.outputs.WebsiteArtifactName }}
      Url: "http://localhost:3000/"

  test:
    uses: ./.github/workflows/tests.yml
    permissions:
      contents: read
      checks: write
    needs: [build_website]
    with:
      WebsiteArtifactName: ${{ needs.build_website.outputs.WebsiteArtifactName }}
    secrets:
      reporting_token: ${{ github.token }}

  release:
    name: 📦 Package Website
    runs-on: ubuntu-latest
    needs: [build_website, test, lighthouse]
    steps:
      - name: 🛡️ Get Token
        id: get_workflow_token
        uses: peter-murray/workflow-application-token-action@v1
        with:
          organization: "myHill-Cycling"
          permissions: "contents:write,checks:write,issues:write"
          application_id: ${{ secrets.APPLICATION_ID }}
          application_private_key: ${{ secrets.APPLICATION_PRIVATE_KEY }}

      - name: 📥 Checkout
        uses: actions/checkout@v3
        with:
          lfs: false
          token: ${{ steps.get_workflow_token.outputs.token }}

      - name: 📨 Pull Tags
        if: ${{ !env.ACT }}
        run: git fetch --prune --tags

      - run: yarn --version || npm install -g yarn
        name: 🔗 Install yarn

      - name: 🧱 Node Setup
        if: ${{ !env.ACT }}
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "yarn"

      - name: 🗄️ Dependency Module Cache
        uses: actions/cache@v3
        with:
          path: "**/node_modules"
          key: "${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}"

      - name: 🔗 Dependency installation
        run: yarn install
        env:
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: true

      - name: 📦 Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ needs.build_website.outputs.WebsiteArtifactName }}
          # download all files into "dist" folder
          path: dist

      - name: 📫 Archive distribution
        run: "cd ./dist && zip -v -r ../static_site.zip . ; cd .."

      - name: 🏗️ Build Release
        if: ${{ !env.ACT }}
        run: yarn semantic-release
        env:
          GH_TOKEN: ${{ steps.get_workflow_token.outputs.token }}
