name: Deploy pull request previews
on: 
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main
    paths-ignore:
      - "**/CHANGELOG.md"

env:
  CYPRESS_CONTAINER: "cypress/browsers:node16.14.2-slim-chrome100-ff99-edge"

jobs:
  build_website:
    name: Build Website
    runs-on: ubuntu-latest
    container: ${{ env.CYPRESS_CONTAINER }}
    outputs:
      WebsiteArtifactName: website-${{ github.sha }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          lfs: true

      - run: yarn --version || npm install -g yarn
        name: Install yarn

      - name: Node Setup
        if: ${{ !env.ACT }}
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "yarn"

      - name: Dependency Module Cache
        uses: actions/cache@v3
        with:
          path: "**/node_modules"
          key: "${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}"

      - name: Dependency installation
        uses: cypress-io/github-action@v2
        with:
          runTests: false
          install-command: yarn install --immutable

      - name: Linting
        run: yarn lint

      - name: Build
        run: yarn build
        env:
          RFG_API_KEY: ${{ secrets.RFG_API_KEY }}

      - name: Upload website artifact
        uses: actions/upload-artifact@v3
        with:
          name: website-${{ github.sha }}
          path: ./dist/

  test:
    name: Tests
    runs-on: ubuntu-latest
    container: ${{ env.CYPRESS_CONTAINER }}
    needs: [build_website]
    strategy:
      fail-fast: false
      matrix:
        containers: [1, 2, 3]
        browser: [edge, chrome, firefox]
    steps:
      - name: Checkout
        uses: actions/checkout@v3      

      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ needs.build_website.outputs.WebsiteArtifactName }}
          # download all files into "dist" folder
          path: dist

      - name: "Dependency Module Cache"
        uses: actions/cache@v3
        id: module_cache
        with:
          path: "**/node_modules"
          key: "${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}"      

      - name: Run Cypress
        uses: cypress-io/github-action@v2
        with:
          runTests: false
          start: yarn preview
          install-command: yarn install --immutable
          wait-on: 'http://localhost:3000'
          wait-on-timeout: 120
          browser: ${{ matrix.browser }}
          record: ${{ !env.ACT }}
          parallel: true
          group: ${{ matrix.browser }}
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # Recommended: pass the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  deploy_preview:
    environment:
      name: pr-${{github.event.number}}
      url: ${{ steps.deploy.outputs.static_web_app_url }}
    needs: build_website
    permissions:
      checks: write
      contents: read
      deployments: write
      issues: write
      pull-requests: write
    if: github.event_name == 'pull_request' && github.event.action != 'closed'
    runs-on: ubuntu-latest
    name: Deploy preview app
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ needs.build_website.outputs.WebsiteArtifactName }}
          # download all files into "dist" folder
          path: dist

      - name: Deploy Release
        id: deploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          skip_deploy_on_missing_secrets: ${{ env.ACT }} # Skip when running locally
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
          action: "upload"
          ###### Repository/Build Configurations - These values can be configured to match your app requirements. ######
          # For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig
          app_location: "./dist" # App source code path
          api_location: "" # Api source code path - optional
          output_location: "" # Built app content directory - optional
          skip_app_build: true
          ###### End of Repository/Build Configurations ######

  close_pull_request_preview:
    permissions:
      checks: write
      contents: read
      deployments: write
      issues: write
      pull-requests: write
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Preview
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          action: "close"
