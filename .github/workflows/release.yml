name: Release
on:
  push:
    branches:
      - main
    paths-ignore:
      - "CHANGELOG.md"
      - "package.json"

jobs:
  build_website:
    name: Build Website
    runs-on: ubuntu-latest
    container: "cypress/browsers:node16.14.2-slim-chrome100-ff99-edge"
    outputs:
      WebsiteArtifactName: website-${{ github.sha }}
    steps:
      - name: Install GIT LFS Repository
        run: curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash

      - name: Install GIT LFS
        run: apt-get install -y git-lfs

      - name: Checkout
        uses: actions/checkout@v3
        with:
          lfs: true

      - run: yarn --version || npm install -g yarn
        name: Install yarn

      - name: Node Setup
        if: ${{ !env.ACT }}
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "yarn"

      - name: Dependency Module Cache
        uses: actions/cache@v3
        with:
          path: "**/node_modules"
          key: "${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}"

      - name: Dependency installation
        uses: cypress-io/github-action@v2
        with:
          runTests: false
          install-command: yarn install --immutable

      - name: Linting
        run: yarn lint

      - name: Build
        run: yarn build
        env:
          RFG_API_KEY: ${{ secrets.RFG_API_KEY }}

      - name: Upload website artifact
        uses: actions/upload-artifact@v3
        with:
          name: website-${{ github.sha }}
          path: ./dist/

  test:
    name: Tests
    runs-on: ubuntu-latest
    container: "cypress/browsers:node16.14.2-slim-chrome100-ff99-edge"
    needs: [build_website]
    strategy:
      fail-fast: false
      matrix:
        containers: [1, 2, 3]
        browser: [edge, chrome, firefox]
    steps:
      - name: Checkout
        uses: actions/checkout@v3      

      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ needs.build_website.outputs.WebsiteArtifactName }}
          # download all files into "dist" folder
          path: dist

      - name: "Dependency Module Cache"
        uses: actions/cache@v3
        id: module_cache
        with:
          path: "**/node_modules"
          key: "${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}"      

      - name: Run Cypress
        uses: cypress-io/github-action@v2
        with:
          start: yarn preview
          install-command: yarn install --immutable
          wait-on: 'http://localhost:3000'
          wait-on-timeout: 120
          browser: ${{ matrix.browser }}
          record: ${{ !env.ACT }}
          parallel: true
          group: ${{ matrix.browser }}
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # Recommended: pass the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    name: "Package Website"
    runs-on: ubuntu-latest
    needs: [build_website, test]
    steps:
      - name: Get Token
        id: get_workflow_token
        uses: peter-murray/workflow-application-token-action@v1
        with:
          organization: "myHill-Cycling"
          permissions: "contents:write,checks:write,issues:write"
          application_id: ${{ secrets.APPLICATION_ID }}
          application_private_key: ${{ secrets.APPLICATION_PRIVATE_KEY }}

      - name: Checkout
        uses: actions/checkout@v3
        with:
          lfs: false
          token: ${{ steps.get_workflow_token.outputs.token }}

      - name: Pull Tags
        if: ${{ !env.ACT }}
        run: git fetch --prune --tags

      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ needs.build_website.outputs.WebsiteArtifactName }}
          # download all files into "dist" folder
          path: dist

      - name: Archive distribution
        run: "cd ./dist && zip -v -r ../static_site.zip . ; cd .."

      - name: Build Release
        if: ${{ !env.ACT }}
        run: yarn semantic-release
        env:
          GH_TOKEN: ${{ steps.get_workflow_token.outputs.token }}