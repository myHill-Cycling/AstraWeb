name: Release
on:
  push:
    branches:
      - main
    paths-ignore:
      - "CHANGELOG.md"
      - "package.json"

jobs:
  package_website:
    name: "Package Website"
    runs-on: ubuntu-latest
    environment:
      name: production
    steps:
      - name: Get Token
        id: get_workflow_token
        uses: peter-murray/workflow-application-token-action@v1
        with:
          organization: "myHill-Cycling"
          permissions: "contents:write,checks:write,issues:write"
          application_id: ${{ secrets.APPLICATION_ID }}
          application_private_key: ${{ secrets.APPLICATION_PRIVATE_KEY }}

      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
          token: ${{ steps.get_workflow_token.outputs.token }}

      - name: Pull Tags
        if: ${{ !env.ACT }}
        run: git fetch --prune --tags      
      
      - run: npm install -g yarn
        if: ${{ env.ACT }}
        name: Install yarn

      - name: "Node Setup"
        if: ${{ !env.ACT }}
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "yarn"

      - name: "Dependency Module Cache"
        uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: "${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}"

      - name: Dependency installation
        run: yarn install --immutable

      - name: Linting
        run: yarn lint

      #- name: Tests
      #  run: yarn test:ci

      - name: Build
        run: yarn build
        env:
          RFG_API_KEY: ${{ secrets.RFG_API_KEY }}

      - name: Generate version
        id: fetch_version
        env:
          GITHUB_TOKEN: ${{ steps.get_workflow_token.outputs.token }}
        run: echo ::set-output name=version::v$(yarn semantic-release --dry-run | grep -oP 'Published release \K(?:.?\d)*')

      - name: Upload website artifact
        uses: actions/upload-artifact@v3
        with:
          name: website-${{ steps.fetch_version.outputs.version }}
          path: ./dist/

      - name: Archive distribution
        run: "cd ./dist && zip -v -r ../static_site.zip . ; cd .."

      - name: Build Release
        if: ${{ !env.ACT }}
        run: yarn semantic-release
        env:
          GH_TOKEN: ${{ steps.get_workflow_token.outputs.token }}