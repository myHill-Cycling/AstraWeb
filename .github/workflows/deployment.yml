name: Deployment
on:
  release:
    types: [released]

jobs:
  deploy_to_azure:
    name: "Deploy to Azure"
    runs-on: ubuntu-latest
    permissions:
      checks: write
      contents: read
      deployments: write
      issues: write
      pull-requests: write
    environment:
      name: production
    steps:
      - uses: robinraju/release-downloader@v1.3
        name: Download release
        with:
          repository: "myHill-Cycling/AstraWeb"
          tag: ${{ github.ref_name }}
          fileName: "static_site.zip"
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: altinukshini/deployment-action@releases/v1
        name: Create GitHub deployment
        id: deployment
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment: production
          pr: false
          initial_status: in_progress
          ref: ${{ github.ref }}

      - name: Unzip release
        run: unzip static_site.zip -d ./dist

      - name: Deploy to Azure
        id: deploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          skip_deploy_on_missing_secrets: ${{ env.ACT }} # Skip when running locally
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
          action: "upload"
          ###### Repository/Build Configurations - These values can be configured to match your app requirements. ######
          # For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig
          app_location: "./dist" # App source code path
          api_location: "" # Api source code path - optional
          output_location: "" # Built app content directory - optional
          skip_app_build: true
          ###### End of Repository/Build Configurations ######

      - name: Update deployment status (success)
        if: success()
        uses: altinukshini/deployment-status@releases/v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          target_url: ${{ steps.deploy.outputs.static_web_app_url }}
          state: "success"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}

      - name: Update deployment status (failure)
        if: failure()
        uses: altinukshini/deployment-status@releases/v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          target_url: ${{ steps.deploy.outputs.static_web_app_url }}
          state: "failure"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}